spring:
  application:
    name: shp-zuul
server:
  port: 8080
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://${eurekaUserName}:${eurekaPassWord}@localhost:8761/eureka/
  instance:
    prefer‐ip‐address: true
    status-page-url-path: /actuator/info
    health-check-url-path: /actuator/health
eurekaUserName: shp
eurekaPassWord: shp123
zuul:
  host:
    connect-timeout-millis: 20000
    socket-timeout-millis: 20000
  sensitive-headers:  Cookie,Set-Cookie
  routes:
    auth:
      path: /api/auth/**
      service-id: shp-auth
    admin:
      path: /api/admin/**
      service-id: shp-admin
security:
  oauth2:
    client:
      access-token-uri: http://localhost:${server.port}/api/auth/oauth/token
      user-authorization-uri: http://localhost:${server.port}/api/auth/oauth/authorize
      client-id: shp-admin
      client-secret: shp-admin-secret
    resource:
      user-info-uri: http://localhost:${server.port}/api/auth/home/principal
      prefer-token-info: false
      jwt:
        key-value: shp_oauth_key
#        key-uri: http://localhost:${server.port}/auth/oauth/token_key
# key-value跟key-uri：token的验证可以直接在本地（即本服务）完成，不需要连接wsm-oauth服务认证服务器。
#              注意：如果要使用key-value对称加密方式，
#                    到wsm-oauth服务AuthorizationServerConfig类JwtAccessTokenConverter方法中使用对称加密方式
#    jwt:
#      key-value: shp #对称加密方式
#      key-uri: http://localhost:${server.port}/auth/oauth/token_key #非对称加密方式 (获取公钥)

ribbon:
  ReadTimeout: 10000 #请求处理的超时时间
  ConnectTimeout: 5000 #请求连接的超时时间
  MaxAutoRetries: 1 #对当前实例的重试次数
  MaxAutoRetriesNextServer: 2 #切换实例的重试次数
  eureka:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 100000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    bus-refresh:
      enabled: true
